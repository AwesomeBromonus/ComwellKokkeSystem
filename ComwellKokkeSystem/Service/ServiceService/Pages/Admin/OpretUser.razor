@page "/opretuser"
@* KOMPONENT: Blazor Razor Component for brugeroprettelse *@

@inject IAuthService AuthService               // Service til brugeroprettelse og autentifikation
@inject NavigationManager NavManager            // Navigationstjeneste til sideskift

@using Modeller

<link href="css/Panel.css" rel="stylesheet" />

<div class="admin-full-container">

    @* Overskrift og kort instruktion til administratoren *@
    <div class="admin-header">
        <h2 class="admin-title">Opret ny bruger</h2>
        <p class="admin-subtitle">Udfyld formularen for at oprette en ny bruger i systemet.</p>
    </div>

    <div class="admin-content">
        @* Formular til at oprette ny bruger. Når den valideres og sendes, kaldes HandleRegister *@
        <EditForm Model="@newUser" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />  @* Validerer datakomponenter *@
            <ValidationSummary />         @* Viser valideringsfejl *@

            <div class="card shadow-sm border-0 p-4 rounded-4 bg-white">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    @* Brugernavn input *@
                    <div class="form-group">
                        <label>Brugernavn</label>
                        <InputText class="form-control rounded-pill" @bind-Value="newUser.Username" />
                    </div>

                    @* Adgangskode input (skjult) *@
                    <div class="form-group">
                        <label>Adgangskode</label>
                        <InputText type="password" class="form-control rounded-pill" @bind-Value="newUser.Password" />
                    </div>

                    @* Navn på brugeren *@
                    <div class="form-group">
                        <label>Navn</label>
                        <InputText class="form-control rounded-pill" @bind-Value="newUser.Navn" />
                    </div>

                    @* Emailadresse *@
                    <div class="form-group">
                        <label>Email</label>
                        <InputText class="form-control rounded-pill" @bind-Value="newUser.Email" />
                    </div>

                    @* Telefonnummer *@
                    <div class="form-group">
                        <label>Telefonnummer</label>
                        <InputText class="form-control rounded-pill" @bind-Value="newUser.Tlf" />
                    </div>

                    @* Adresse *@
                    <div class="form-group">
                        <label>Adresse</label>
                        <InputText class="form-control rounded-pill" @bind-Value="newUser.Adresse" />
                    </div>

                    @* Startdato for ansættelse eller tilknytning *@
                    <div class="form-group">
                        <label>Startdato</label>
                        <InputDate class="form-control rounded-pill" @bind-Value="newUser.StartDato" />
                    </div>

                    @* Slutdato - valgfri (kan være null) *@
                    <div class="form-group">
                        <label>Slutdato (valgfri)</label>
                        <InputDate class="form-control rounded-pill" @bind-Value="newUser.SlutDato" />
                    </div>

                    @* Dropdown til at vælge hotel. Når valgt, opdateres både HotelId og HotelNavn i modellen *@
                    <div class="form-group">
                        <label>Hotel</label>
                        <select class="form-control rounded-pill" @onchange="OnHotelChanged">
                            <option value="">Vælg hotel</option>
                            @foreach (var hotel in comwellHoteller)
                            {
                                <option value="@hotel.Id">@hotel.Navn</option>
                            }
                        </select>
                    </div>

                    @* Dropdown til at vælge rolle for brugeren (elev, kok eller admin) *@
                    <div class="form-group">
                        <label>Rolle</label>
                        <InputSelect class="form-control rounded-pill" @bind-Value="newUser.Role">
                            <option value="elev">Elev</option>
                            <option value="kok">Kok</option>
                            <option value="admin">Admin</option>
                        </InputSelect>
                    </div>
                </div>

                @* Send-knap til at oprette brugeren *@
                <button type="submit" class="btn btn-primary mt-4 w-100 fw-bold rounded-pill">Opret Bruger</button>

                @* Viser en succes- eller fejlbesked efter oprettelse *@
                @if (!string.IsNullOrEmpty(message))
                {
                    <div class="alert @(registerSuccess ? "alert-success" : "alert-danger") mt-3">
                        @message
                    </div>
                }
            </div>
        </EditForm>
    </div>
</div>

@code {
    @* KLASSE: C# kode bag komponenten *@

    // Initialiserer en ny bruger med default startdato som i dag og uden slutdato
    private UserModel newUser = new()
        {
            StartDato = DateTime.Today,
            SlutDato = null
        };

    // Variabel til beskeder til brugeren efter oprettelsesforsøg
    private string message = "";

    // Flag til at styre om oprettelsen lykkedes, bruges til styling af besked
    private bool registerSuccess = false;

    // Liste med hoteller, som kan vælges i dropdown - indeholder både id og navn
    private List<Hoteller> comwellHoteller = new()
    {
        new Hoteller { Id = 1, Navn = "Aarhus" },
        new Hoteller { Id = 2, Navn = "Borupgaard" },
        new Hoteller { Id = 3, Navn = "Bygholm Park" },
        new Hoteller { Id = 4, Navn = "Centralværkstedet" },
        new Hoteller { Id = 5, Navn = "Copenhagen Portside" },
        new Hoteller { Id = 6, Navn = "H.C. Andersen Odense" },
        new Hoteller { Id = 7, Navn = "Holte" },
        new Hoteller { Id = 8, Navn = "Hvide Hus Aalborg" },
        new Hoteller { Id = 9, Navn = "Kellers Park" },
        new Hoteller { Id = 10, Navn = "Klarskovgaard" },
        new Hoteller { Id = 11, Navn = "Kolding" },
        new Hoteller { Id = 12, Navn = "Kongebrogaarden" },
        new Hoteller { Id = 13, Navn = "Køge Strand" },
        new Hoteller { Id = 14, Navn = "Middelfart" },
        new Hoteller { Id = 15, Navn = "Rebild Bakker" },
        new Hoteller { Id = 16, Navn = "Roskilde" },
        new Hoteller { Id = 17, Navn = "Sorø" }
    };

    // Metode der kaldes når formularen valideres og sendes
    private async Task HandleRegister()
    {
        // Kalder AuthService for at oprette ny bruger i backend
        var success = await AuthService.Register(newUser);
        registerSuccess = success;

        if (success)
        {
            // Hvis oprettelsen lykkes, vis besked og naviger tilbage til admin-side efter kort pause
            message = "Bruger oprettet!";
            await Task.Delay(1500);
            NavManager.NavigateTo("/administrator");
        }
        else
        {
            // Ved fejl vises en passende fejlbesked
            message = "Noget gik galt – brugeren blev ikke oprettet.";
        }
    }

    // Opdaterer newUser med valgt hotel baseret på dropdown-værdi (id)
    private void OnHotelChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int id))
        {
            // Finder hotel med tilsvarende id i listen
            var valgtHotel = comwellHoteller.FirstOrDefault(h => h.Id == id);
            if (valgtHotel != null)
            {
                // Opdaterer både hotel-id og navn i modellen
                newUser.HotelId = valgtHotel.Id;
                newUser.HotelNavn = valgtHotel.Navn;
            }
        }
    }
}
