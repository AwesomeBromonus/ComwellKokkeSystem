@page "/laering"
@* KOMPONENT: Blazor Razor Component til visning og upload af læringsmaterialer *@

@using Microsoft.AspNetCore.Components.Forms
@using Modeller
@inject ILæringService LæringService                // Service til håndtering af læringsmaterialer
@inject IUserStateService UserStateService           // Service til at hente den aktuelle brugers rolle

<h3 class="text-2xl font-semibold mb-4">Læringsmaterialer</h3>

@* Kun brugere med rolle admin eller kok kan tilføje nyt materiale *@
@if (UserStateService.CurrentUser?.Role == "admin" || UserStateService.CurrentUser?.Role == "kok")
{
    <button @onclick="ToggleForm"
            class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition mb-4">
        @(VisForm ? "Annuller" : "Tilføj materiale")
    </button>
}

@* Formular til oprettelse af nyt læringsmateriale, vises kun når VisForm er true og bruger har adgang *@
@if (VisForm && (UserStateService.CurrentUser?.Role == "admin" || UserStateService.CurrentUser?.Role == "kok"))
{
    <div class="bg-gray-100 p-4 rounded shadow mb-4">
        <form onsubmit="return false;">
            <div class="mb-2">
                <label class="block mb-1 font-medium">Titel</label>
                <InputText class="w-full p-2 rounded border" @bind-Value="nyLæring.Titel" />
            </div>

            <div class="mb-2">
                <label class="block mb-1 font-medium">Beskrivelse</label>
                <InputTextArea class="w-full p-2 rounded border" @bind-Value="nyLæring.Beskrivelse" />
            </div>

            <div class="mb-2">
                <label class="block mb-1 font-medium">Fil</label>
                <InputFile OnChange="HandleFileChange" accept=".pdf,.jpg,.jpeg,.png,.mp4" />
            </div>

            <button type="button" @onclick="HandleUpload"
                    class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 mt-2">
                Upload
            </button>
        </form>
    </div>
}

@* Viser listen over eksisterende læringsmaterialer eller info hvis ingen findes *@
@if (Materialer.Count > 0)
{
    <div class="grid gap-4">
        @foreach (var item in Materialer)
        {
            <div class="p-4 border rounded bg-white shadow-sm">
                <h4 class="font-bold">@item.Titel</h4>
                <p class="text-sm text-gray-600 mb-2">@item.Beskrivelse</p>
                <div>
                    <span>@GetIkon(item.Filtype)</span>
                    <a href="https://localhost:7013/api/laering/fil/@item.Id"
                       download="@item.FilNavn"
                       class="text-blue-600 underline ml-1">
                        @item.FilNavn
                    </a>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="text-gray-600">Ingen materialer fundet.</p>
}

@code {
    @* KLASSE: C# kode bag komponenten *@

    // Liste der indeholder alle læringsmaterialer hentet fra backend
    private List<Modeller.Læring> Materialer = new();

    // Objekt der holder data for det nye læringsmateriale, som brugeren kan oprette
    private Modeller.Læring nyLæring = new();

    // Den valgte fil til upload, set via InputFile-komponenten
    private IBrowserFile? valgtFil;

    // Boolean der styrer om oprettelsesformular vises eller skjules
    private bool VisForm = false;

    // Når komponenten indlæses, henter vi alle eksisterende læringsmaterialer fra tjenesten
    protected override async Task OnInitializedAsync()
    {
        Materialer = await LæringService.HentAlleAsync();
    }

    // Skifter VisForm true/false, så formular kan vises eller skjules ved klik på knap
    private void ToggleForm() => VisForm = !VisForm;

    // Håndterer filvalg fra InputFile-komponenten og gemmer det valgte filobjekt i valgtFil
    private void HandleFileChange(InputFileChangeEventArgs e)
    {
        valgtFil = e.File;
    }

    // Metode til at uploade nyt læringsmateriale inklusive fil til backend
    private async Task HandleUpload()
    {
        if (valgtFil == null) return; // Hvis ingen fil valgt, gør ingenting

        // Kalder tjenesten UploadAsync som håndterer filupload og oprettelse af læringsobjekt
        var success = await LæringService.UploadAsync(nyLæring, valgtFil);

        if (success)
        {
            // Ved succes nulstilles formularen og formularen skjules
            nyLæring = new Modeller.Læring();
            valgtFil = null;
            VisForm = false;

            // Opdaterer listen af læringsmaterialer for at vise det nye materiale
            Materialer = await LæringService.HentAlleAsync();
        }
    }

    // Returnerer et emoji-ikon der passer til filtypen for visuel information i UI
    private string GetIkon(string type) => type.ToLower() switch
    {
        "pdf" => "📄",
        "mp4" => "🎥",
        "mp3" => "🎵",
        "jpg" or "jpeg" or "png" => "🖼️",
        _ => "📁"
    };
}
