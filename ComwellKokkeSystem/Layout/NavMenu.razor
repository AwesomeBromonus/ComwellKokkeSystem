@inject NavigationManager NavManager
@inject UserState UserState
@implements IDisposable

@if (UserState.IsLoggedIn)
{
    <div class="sidebar vh-100 d-flex flex-column justify-content-between shadow"
         style="width: 180px; background: linear-gradient(180deg, #002f3a, #001f2a);">

        <!-- Top / Logo -->
        <div>
            <div class="px-3 py-3 border-bottom border-secondary text-center">
                <h5 class="m-0 text-white fw-semibold">✨ Comwell</h5>
            </div>

            <!-- Navigation -->
            <nav class="nav flex-column mt-2 px-2 gap-1">
                @if (UserState.Role?.ToLower() == "admin")
                {
                    <NavLink class="nav-link text-white rounded nav-hover" href="/administrator" title="Administrator">
                        🛠️ <span class="ms-2">Administrator</span>
                    </NavLink>
                    <NavLink class="nav-link text-white rounded nav-hover" href="/a" title="Rapport">
                        📊 <span class="ms-2">Rapport</span>
                    </NavLink>
                }
                else if (UserState.Role?.ToLower() == "elev")
                {
                    <NavLink class="nav-link text-white rounded nav-hover" href="/mitoverblik" title="Elevplan">
                        🗂️ <span class="ms-2">Elevplan</span>
                    </NavLink>
                }

                <!-- Fælles -->
                <NavLink class="nav-link text-white rounded nav-hover" href="/messages" title="Chat">
                    💬 <span class="ms-2">Chat</span>
                </NavLink>

                <NavLink class="nav-link text-white rounded nav-hover" href="/laering" title="Læring">
                    📚 <span class="ms-2">Læring</span>
                </NavLink>
            </nav>
        </div>

        <!-- Footer / Bruger -->
        <div class="px-3 py-3 border-top border-secondary">
            <div class="text-white small mb-2 text-center">
                👤 <strong>@UserState.Username</strong><br />
                <span class="badge bg-info text-dark">@UserState.Role</span>
            </div>
            <button class="btn btn-sm btn-outline-light w-100" @onclick="LogoutAsync">Log ud</button>
        </div>
    </div>
}
else
{
    <div class="sidebar vh-100 d-flex justify-content-center align-items-center text-white"
         style="width: 180px; background: linear-gradient(180deg, #002f3a, #001f2a);">
        <NavLink class="btn btn-outline-light" href="/login" title="Log ind">
            🔐 Log ind
        </NavLink>
    </div>
}

<style>
    /* Base layout */
    .sidebar {
        transition: all 0.3s ease-in-out;
    }

    .nav-link {
        padding: 10px 12px;
        transition: background-color 0.2s ease-in-out, transform 0.2s ease;
        display: flex;
        align-items: center;
    }

        .nav-link span {
            white-space: nowrap;
        }

        .nav-link.active {
            background-color: #007fa3;
            font-weight: bold;
            border-radius: 8px;
        }

    .nav-hover:hover {
        background-color: rgba(255, 255, 255, 0.1);
        transform: translateX(4px);
        border-left: 3px solid #00cfff;
    }

    .btn-outline-light {
        border-color: #ccc;
        color: #fff;
    }

        .btn-outline-light:hover {
            background-color: #ffffff22;
            color: #fff;
        }
</style>

@code {
    protected override void OnInitialized()
    {
        UserState.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UserState.OnChange -= StateHasChanged;
    }

    private async Task LogoutAsync()
    {
        await UserState.LogoutAsync();
        NavManager.NavigateTo("/");
    }
}
