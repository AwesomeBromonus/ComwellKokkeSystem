@page "/messages"
@using Modeller
@inject IBeskedService beskedService
@inject UserState userState

<h3 class="text-2xl font-bold mb-4">Beskeder for @userState.Username</h3>

@if (!userState.Id.HasValue)
{
    <p>Du skal være logget ind for at se beskeder.</p>
}
else
{
    <div class="border rounded p-4 bg-gray-100 h-64 overflow-y-auto mb-4">
        @if (messages.Count == 0)
        {
            <p>Ingen beskeder fundet.</p>
        }
        else
        {
            @foreach (var besked in messages)
            {
                <div class="mb-2">
                    <div class="font-semibold">
                        @(besked.AfsenderId == userState.Id ? "Du" : $"Bruger {besked.AfsenderId}")
                    </div>
                    <div>@besked.Indhold</div>
                    <div class="text-sm text-gray-500">@besked.Tidsstempel.ToLocalTime().ToString("g")</div>
                </div>
            }
        }
    </div>

    <div class="flex gap-2">
        <input class="flex-grow border rounded p-2" placeholder="Skriv besked..." @bind="newMessage" />
        <button class="bg-blue-600 text-white px-4 py-2 rounded" @onclick="SendMessage">Send</button>
    </div>
}

@code {
    private List<Besked> messages = new();
    private string newMessage = "";

    protected override async Task OnInitializedAsync()
    {
        if (userState.Id.HasValue)
        {
            messages = await beskedService.GetByUserIdAsync(userState.Id.Value);
        }
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(newMessage) && userState.Id.HasValue)
        {
            var besked = new Besked
                {
                    AfsenderId = userState.Id.Value,
                    ModtagerId = 2, // TODO: Skift til dynamisk modtager
                    Indhold = newMessage,
                    Tidsstempel = DateTime.Now,
                    ErGruppeBesked = false
                };

            await beskedService.AddBeskedAsync(besked);
            messages.Add(besked);
            newMessage = "";
        }
    }
}
