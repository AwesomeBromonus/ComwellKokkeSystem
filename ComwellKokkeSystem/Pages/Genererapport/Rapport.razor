@page "/rapportside"
@using ComwellKokkeSystem.Service
@inject IRapportService RapportService
@inject IUserService UserService
@inject IDelmaalService DelmaalService
@inject IPraktikperiodeService praktikperiodeService
@inject IJSRuntime JS

@using Modeller

<h3 class="mb-4">📊 Elevrapport</h3>

@if (brugere == null || delmaalListe == null)
{
    <p>⏳ Indlæser data...</p>
}
else
{
    <button class="btn btn-success mb-3" @onclick="EksporterExcel">📥 Eksportér til Excel</button>

    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Elevnavn</th>
                <th>Email</th>
                <th>Hotel</th>
                <th>Delmål</th>
                <th>Status</th>
                <th>Deadline</th>
                <th>Praktikperiode</th>        
                <th>Periode-status</th>      
            </tr>
        </thead>

        <tbody>
            @foreach (var bruger in brugere)
            {
                var elevensDelmaal = delmaalListe.Where(d => d.ElevId == bruger.Id);
                foreach (var d in elevensDelmaal)
                {
                    var periode = praktikperioder.FirstOrDefault(p => p.Id == d.PraktikperiodeId);
                    <tr>
                        <td>@bruger.Navn</td>
                        <td>@bruger.Email</td>
                        <td>@bruger.HotelNavn</td>
                        <td>@d.Beskrivelse</td>
                        <td>@d.Status</td>
                        <td>@d.Deadline.ToShortDateString()</td>
                        <td>@periode?.Navn</td>
                        <td>@periode?.Status</td>
                    </tr>
                }
            }
        </tbody>

    </table>
}

@code {
    private List<UserModel>? brugere;
    private List<Modeller.Delmål>? delmaalListe;
    private List<Praktikperiode> praktikperioder = new();


    protected override async Task OnInitializedAsync()
    {
        brugere = (await UserService.GetAllAsync()).Where(u => u.Role.ToLower() == "elev").ToList();
        delmaalListe = await DelmaalService.GetAllAsync();
        praktikperioder = await praktikperiodeService.GetAllAsync(); // eller brug en dedikeret service hvis du har én
    }

    private async Task EksporterExcel()
    {
        var data = await RapportService.HentExcelRapportAsync();
        var filnavn = $"Elevrapport_{DateTime.Now:yyyyMMddHHmmss}.xlsx";

        using var streamRef = new DotNetStreamReference(new MemoryStream(data));
        await JS.InvokeVoidAsync("downloadFileFromStream", filnavn, streamRef);
    }
}
