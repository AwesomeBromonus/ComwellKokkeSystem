@using ComwellKokkeSystem.Pages.Helpers
@using Modeller
@inject NavigationManager NavigationManager

<div class="overflow-x-auto">
    <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-100">
        <tr>
            <th>
                <input type="checkbox" @onclick="ToggleSelectAll" checked="@AllSelected" />
            </th>
            <th @onclick="() => SortBy(nameof(StudentViewModel.Navn))" class="cursor-pointer px-4 py-2">Navn</th>
            <th @onclick="() => SortBy(nameof(StudentViewModel.Email))" class="cursor-pointer px-4 py-2">Email</th>
            <th class="px-4 py-2">Status</th>
            <th class="px-4 py-2">Praktikperiode</th>
            <th class="px-4 py-2">Start Dato</th>
            <th class="px-4 py-2">Slut Dato</th>
            <th class="px-4 py-2">Handling</th>
        </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
        @foreach (var elev in PagedStudents)
        {
            <tr class="hover:bg-gray-50 transition">
                <td class="px-4 py-2">
                    <input type="checkbox" @bind="elev.IsSelected" />
                </td>
                <td class="px-4 py-2">@elev.Navn</td>
                <td class="px-4 py-2">@elev.Email</td>
                <td class="px-4 py-2">@elev.Status</td>
                <td class="px-4 py-2">
                    @if (elev.Praktikperiode != null)
                    {
                        @elev.Praktikperiode.Navn
                    }
                </td>
                <td class="px-4 py-2">@elev.Praktikperiode?.StartDato.ToString("dd/MM/yyyy")</td>
                <td class="px-4 py-2">@elev.Praktikperiode?.SlutDato.ToString("dd/MM/yyyy")</td>
                <td class="px-4 py-2">
                    <button class="text-blue-600 hover:text-blue-800 underline"
                            @onclick="() => OnShowDetails.InvokeAsync(elev)">
                        Vis praktikperioder
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div class="flex justify-between items-center mt-4">
    <button @onclick="PreviousPage" disabled="@IsFirstPage" class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50">Forrige</button>
    <span>Side @CurrentPage af @TotalPages</span>
    <button @onclick="NextPage" disabled="@IsLastPage" class="px-3 py-1 bg-gray-200 rounded hover:bg-gray-300 disabled:opacity-50">Næste</button>
</div>

@code {
    [Parameter] public List<StudentViewModel> Elever { get; set; } = new();
    [Parameter] public EventCallback<StudentViewModel> OnShowDetails { get; set; }

    private int PageSize = 10;
    private int CurrentPage = 1;
    private string SortColumn = nameof(StudentViewModel.Navn);
    private bool SortAscending = true;

    private IEnumerable<StudentViewModel> PagedStudents =>
        Elever
            .OrderByDynamic(SortColumn, SortAscending)
            .Skip((CurrentPage - 1) * PageSize)
            .Take(PageSize);

    private int TotalPages => (int)Math.Ceiling(Elever.Count / (double)PageSize);
    private bool IsFirstPage => CurrentPage == 1;
    private bool IsLastPage => CurrentPage == TotalPages;

    private bool AllSelected
    {
        get => Elever.All(e => e.IsSelected);
        set
        {
            foreach (var elev in Elever)
                elev.IsSelected = value;
        }
    }

    private void ToggleSelectAll()
    {
        AllSelected = !AllSelected;
    }

    private void NextPage()
    {
        if (!IsLastPage) CurrentPage++;
    }

    private void PreviousPage()
    {
        if (!IsFirstPage) CurrentPage--;
    }

    private void SortBy(string column)
    {
        if (SortColumn == column)
            SortAscending = !SortAscending;
        else
        {
            SortColumn = column;
            SortAscending = true;
        }
    }
}