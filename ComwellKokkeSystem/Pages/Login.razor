@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavManager
@using Modeller

<!-- Login-layout i samme stil som register -->
<div class="d-flex justify-content-center align-items-center" style="min-height: 100vh; background-color: #f5f5f5;">
    <div class="p-5 shadow" style="background-color: white; border-radius: 20px; width: 100%; max-width: 480px;">
        <h2 class="text-center mb-4" style="color: #003b4a;">Log ind</h2>

        <EditForm Model="@login" OnValidSubmit="@HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!-- Brugernavn -->
            <div class="form-group mb-3">
                <label class="form-label">Brugernavn</label>
                <InputText class="form-control form-control-lg rounded-pill" @bind-Value="login.Username" />
                <ValidationMessage For="@(() => login.Username)" />
            </div>

            <!-- Adgangskode -->
            <div class="form-group mb-4">
                <label class="form-label">Adgangskode</label>
                <InputText type="password" class="form-control form-control-lg rounded-pill" @bind-Value="login.Password" />
                <ValidationMessage For="@(() => login.Password)" />
            </div>

            <!-- Submit-knap -->
            <button type="submit" class="btn btn-lg w-100 text-white"
                    style="background-color: #007fa3; border-radius: 50px;" disabled="@isLoading">
                @(isLoading ? "Logger ind..." : "Log ind")
            </button>
        </EditForm>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert alert-danger mt-3">@message</div>
        }

        <!-- Info-tekst -->
        <div class="text-center mt-4 text-muted" style="font-size: 0.95rem;">
            <p>❓ Har du problemer med at logge ind? Kontakt administrator eller HR-afdelingen.</p>
        </div>
    </div>
</div>

@code {
    private LoginModel login = new();
    private string message = "";
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        isLoading = true;
        message = "";

        var success = await AuthService.Login(login);
        if (success)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            message = "Forkert brugernavn eller adgangskode.";
        }

        isLoading = false;
    }
}
