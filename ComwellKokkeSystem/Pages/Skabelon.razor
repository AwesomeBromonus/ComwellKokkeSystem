@page "/skabelon"
@using Modeller
@inject IPraktikperiodeService PraktikService
@inject IDelmaalService DelmaalService

<h3 class="text-xl font-bold text-gray-800 mb-4 text-center">Uddannelsesplan Skabelon</h3>

<div class="max-w-3xl mx-auto bg-white p-6 rounded-lg shadow-md">
    <div class="mb-4">
        <label class="block mb-1 font-semibold">Vælg praktikperiode:</label>
        <select @onchange="LoadDelmålAsync"
                class="p-2 border rounded-md w-full focus:outline-none focus:ring-2 focus:ring-blue-500">
            <option disabled selected value="">-- Vælg praktikperiode --</option>
            @foreach (var periode in praktikPerioder)
            {
                <option value="@periode.Id">@periode.Navn</option>
            }
        </select>
    </div>

    @if (delmål.Any())
    {
        <div class="mt-4">
            <h5 class="text-lg font-semibold mb-2">Delmål</h5>
            <table class="w-full text-left border-collapse">
                <thead>
                    <tr class="bg-gray-200">
                        <th class="p-2 border">Delmål</th>
                        <th class="p-2 border">Deadline</th>
                        <th class="p-2 border">Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var m in delmål)
                    {
                        <tr>
                            <td class="p-2 border">@m.Beskrivelse</td>
                            <td class="p-2 border">@m.Deadline.ToShortDateString()</td>
                            <td class="p-2 border">
                                <input type="checkbox" checked="@IsDone(m.Status)" @onchange="() => ToggleStatus(m)" />
                                <span class="@GetStatusColor(m.Status) ml-2">@GetStatusText(m.Status)</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <p class="mt-4 text-center text-gray-700">Fremgang: @fremgang% (@antalFuldførte/@delmål.Count fuldførte)</p>
        </div>
    }
    else if (valgtPeriodeId != 0)
    {
        <p class="text-gray-500 mt-4">Ingen delmål fundet for denne praktikperiode.</p>
    }
</div>

@code {
    private List<Modeller.Praktikperiode> praktikPerioder = new();
    private List<Modeller.Delmål> delmål = new();
    private int valgtPeriodeId = 0;

    private int antalFuldførte = 0;
    private int fremgang = 0;

    protected override async Task OnInitializedAsync()
    {
        praktikPerioder = await PraktikService.GetAllAsync();
    }

    private async Task LoadDelmålAsync(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int id))
        {
            valgtPeriodeId = id;
            delmål = await DelmaalService.GetByPraktikperiodeIdAsync(valgtPeriodeId);
            OpdaterFremgang();
        }
    }

    private void ToggleStatus(Modeller.Delmål m)
    {
        m.Status = m.Status == "Færdig" ? "Ikke startet" : "Færdig";
        OpdaterFremgang();
    }

    private void OpdaterFremgang()
    {
        antalFuldførte = delmål.Count(d => d.Status == "Færdig");
        fremgang = delmål.Count > 0 ? (antalFuldførte * 100) / delmål.Count : 0;
    }

    private bool IsDone(string status) => status == "Færdig";

    private string GetStatusText(string status) => status == "Færdig" ? "Fuldført" : "Ikke fuldført";

    private string GetStatusColor(string status) => status == "Færdig" ? "text-green-600" : "text-gray-500";
}
