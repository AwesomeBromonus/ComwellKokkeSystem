@page "/register" // Denne side vises på /register

@inject NavigationManager NavManager
@inject IAuthService AuthService
@using Modeller

<!-- Registrerings-layout -->
<div class="d-flex justify-content-center align-items-center" style="min-height: 100vh; background-color: #f5f5f5;">
    <div class="p-5 shadow" style="background-color: white; border-radius: 20px; width: 100%; max-width: 480px;">
        <h2 class="text-center mb-4" style="color: #003b4a;">Opret bruger</h2>

        <!-- Formular til oprettelse -->
        <EditForm Model="@newUser" OnValidSubmit="@HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!-- Brugernavn -->
            <div class="form-group mb-3">
                <label class="form-label">Brugernavn</label>
                <InputText class="form-control form-control-lg rounded-pill" @bind-Value="newUser.Username" />
                <ValidationMessage For="@(() => newUser.Username)" />
            </div>

            <!-- Adgangskode -->
            <div class="form-group mb-3">
                <label class="form-label">Adgangskode</label>
                <InputText type="password" class="form-control form-control-lg rounded-pill" @bind-Value="newUser.Password" />
                <ValidationMessage For="@(() => newUser.Password)" />
            </div>

            <!-- Rollevælger: elev eller admin -->
            <div class="form-group mb-4">
                <label class="form-label">Vælg rolle</label>
                <InputSelect class="form-select form-select-lg rounded-pill" @bind-Value="newUser.Role">
                    <option value="">Vælg rolle</option>
                    <option value="admin">Admin</option>
                    <option value="elev">Elev</option>
                </InputSelect>
                <ValidationMessage For="@(() => newUser.Role)" />
            </div>

            <!-- Submit-knap -->
            <button type="submit" class="btn btn-lg w-100 text-white" style="background-color: #007fa3; border-radius: 50px;" disabled="@isLoading">
                @(isLoading ? "Opretter..." : "Opret bruger")
            </button>
        </EditForm>

        <!-- Feedback efter forsøg på registrering -->
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert @(registerSuccess ? "alert-success" : "alert-danger") mt-3">
                @message
            </div>
        }

        <!-- Link tilbage til login -->
        <div class="text-center mt-3">
            <p>Har du allerede en bruger? <a href="/login" class="text-decoration-none">Log ind</a></p>
        </div>
    </div>
</div>

@code {
    private RegisterModel newUser = new(); // Brugeroplysninger der skal sendes
    private string message = ""; // Feedbackbesked til bruger
    private bool isLoading = false; // Om der er aktivitet lige nu
    private bool registerSuccess = false; // Om registreringen lykkedes

    private async Task HandleRegister()
    {
        isLoading = true;
        message = "";

        var success = await AuthService.Register(newUser);
        registerSuccess = success;

        if (success)
        {
            message = "Bruger oprettet!";
            await Task.Delay(1500);
            NavManager.NavigateTo("/login"); // Gå til login efter oprettelse
        }
        else
        {
            message = "Oprettelse fejlede.";
        }

        isLoading = false;
    }
}
