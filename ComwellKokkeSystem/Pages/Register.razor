@page "/register"

@inject NavigationManager NavManager
@inject IAuthService AuthService
@using Modeller

<div class="min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-100 to-slate-200 px-4">
    <div class="w-full max-w-2xl bg-white p-10 rounded-3xl shadow-2xl border border-gray-200 animate-fade-in">
        <h2 class="text-4xl font-extrabold text-center text-gray-800 mb-8 tracking-tight">Opret ny bruger</h2>

        <EditForm Model="@newUser" OnValidSubmit="@HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-red-600 mb-4" />

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                @FormField("Brugernavn", @<InputText class="input" @bind-Value="newUser.Username" />)
                @FormField("Adgangskode", @<div class="relative">
                        <InputText type="@passwordType" class="input pr-16" @bind-Value="newUser.Password" />
                        <button type="button" class="toggle-btn" @onclick="TogglePassword">
                            @(showPassword ? "Skjul" : "Vis")
                        </button>
                    </div>)
                @FormField("Navn", @<InputText class="input" @bind-Value="newUser.Navn" />)
                @FormField("Email", @<InputText type="email" class="input" @bind-Value="newUser.Email" />)
                @FormField("Telefonnummer", @<InputText class="input" @bind-Value="newUser.Tlf" />)
                @FormField("Adresse", @<InputText class="input" @bind-Value="newUser.Adresse" />)
                @FormField("Hotel ID", @<InputNumber class="input" @bind-Value="newUser.HotelId" />)
                @FormField("Startdato", @<InputDate class="input" @bind-Value="newUser.StartDato" />)
                @FormField("Uddannelsesplan ID", @<InputNumber class="input" @bind-Value="newUser.UddannelsesplanId" />)
                @FormField("Rolle", @<InputSelect class="input" @bind-Value="newUser.Role">
                        <option value="">Vælg rolle</option>
                        <option value="admin">Admin</option>
                        <option value="elev">Elev</option>
                    </InputSelect>)
            </div>

            <button type="submit" class="mt-8 w-full py-3 bg-cyan-700 hover:bg-cyan-800 text-white font-bold text-lg rounded-xl shadow-md transition duration-300"
                    disabled="@isLoading">
                @(isLoading ? "Opretter..." : "✅ Opret Bruger")
            </button>
        </EditForm>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="mt-4 text-center @(registerSuccess ? "text-green-600" : "text-red-600") font-semibold">
                @message
            </div>
        }

        <div class="text-center mt-6">
            <p class="text-sm text-gray-600">
                Har du allerede en bruger?
                <a href="/login" class="text-cyan-700 font-medium hover:underline">Log ind</a>
            </p>
        </div>
    </div>
</div>

@code {
    private UserModel newUser = new();
    private string message = "";
    private bool isLoading = false;
    private bool registerSuccess = false;
    private bool showPassword = false;

    private string passwordType => showPassword ? "text" : "password";

    private void TogglePassword()
    {
        showPassword = !showPassword;
    }

    private async Task HandleRegister()
    {
        isLoading = true;
        message = "";

        var success = await AuthService.Register(newUser);
        registerSuccess = success;

        if (success)
        {
            message = "Bruger oprettet!";
            await Task.Delay(1500);
            NavManager.NavigateTo("/login");
        }
        else
        {
            message = "Oprettelse fejlede.";
        }

        isLoading = false;
    }

    RenderFragment FormField(string label, RenderFragment content) => @<div>
        <label class="block text-sm font-semibold text-gray-700 mb-1">@label</label>
        @content
    </div>;
}

<style>
    .input {
        width: 100%;
        padding: 0.5rem 1rem;
        border: 1px solid #d1d5db;
        border-radius: 0.5rem;
        outline: none;
        transition: all 0.2s ease-in-out;
    }

        .input:focus {
            border-color: #06b6d4;
            box-shadow: 0 0 0 2px rgba(6, 182, 212, 0.4);
        }

    .toggle-btn {
        position: absolute;
        right: 0.5rem;
        top: 50%;
        transform: translateY(-50%);
        font-size: 0.875rem;
        color: #06b6d4;
        background: none;
        border: none;
        cursor: pointer;
    }

        .toggle-btn:hover {
            text-decoration: underline;
        }

    .animate-fade-in {
        animation: fadeIn 0.4s ease-out;
    }

    @keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: scale(0.97);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }

    }
</style>
