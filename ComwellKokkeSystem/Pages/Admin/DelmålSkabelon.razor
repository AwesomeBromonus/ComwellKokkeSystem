@page "/delmaalskabeloner"
@inject HttpClient Http
@using Modeller

<h3>🧾 Delmålsskabeloner</h3>

@if (skabeloner == null)
{
    <p>Indlæser skabeloner...</p>
}
else
{
    @for (int periode = 1; periode <= 3; periode++)
    {
        var periodeSkabeloner = skabeloner.Where(s => s.PraktikperiodeNummer == periode).ToList();

        if (periodeSkabeloner.Any())
        {
            <h4 class="mt-4">📌 Praktikperiode @periode</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        
                        <th>Beskrivelse</th>
                        <th>DeadlineOffsetDage</th>
                        <th>Ansvarlig</th>
                        <th>Igangsætter</th>
                        <th>Handlinger</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var s in periodeSkabeloner)
                    {
                        <tr>
                           
                            <td>@s.Beskrivelse</td>
                            <td>@s.DeadlineOffsetDage</td>
                            <td>@s.Ansvarlig</td>
                            <td>@s.Igangsætter</td>
                            <td>
                                <button class="btn btn-sm btn-warning me-1" @onclick="() => RedigerSkabelon(s)">✏️</button>
                                <button class="btn btn-sm btn-danger" @onclick="() => SletSkabelon(s.Id)">🗑️</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}

<hr />
<h5>@(redigerMode ? "Rediger delmålsskabelon" : "Tilføj ny delmålsskabelon")</h5>

<EditForm Model="nySkabelon" OnValidSubmit="GemSkabelon">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-2">
        <label>Praktikperiode:</label>
        <InputNumber class="form-control" @bind-Value="nySkabelon.PraktikperiodeNummer" />
    </div>

    <div class="mb-2">
        <label>Beskrivelse:</label>
        <InputText class="form-control" @bind-Value="nySkabelon.Beskrivelse" />
    </div>

    <div class="mb-2">
        <label>Deadline offset (dage):</label>
        <InputNumber class="form-control" @bind-Value="nySkabelon.DeadlineOffsetDage" />
    </div>

    <div class="mb-2">
        <label>Ansvarlig:</label>
        <InputText class="form-control" @bind-Value="nySkabelon.Ansvarlig" />
    </div>

    <div class="mb-2">
        <label>Igangsætter:</label>
        <InputText class="form-control" @bind-Value="nySkabelon.Igangsætter" />
    </div>

    <button class="btn btn-success mt-2" type="submit">@((redigerMode) ? "Opdater" : "Tilføj")</button>
    @if (redigerMode)
    {
        <button class="btn btn-secondary mt-2 ms-2" type="button" @onclick="AnnullerRedigering">Annuller</button>
    }
</EditForm>

@code {
    private List<Modeller.DelmaalSkabelon>? skabeloner;
    private Modeller.DelmaalSkabelon nySkabelon = new();
    private bool redigerMode = false;

    protected override async Task OnInitializedAsync()
    {
        await HentAlle();
    }

    private async Task HentAlle()
    {
        skabeloner = await Http.GetFromJsonAsync<List<Modeller.DelmaalSkabelon>>("api/delmaalskabelon");
    }

    private async Task GemSkabelon()
    {
        if (redigerMode)
        {
            await Http.PutAsJsonAsync($"api/delmaalskabelon/{nySkabelon.Id}", nySkabelon);
        }
        else
        {
            await Http.PostAsJsonAsync("api/delmaalskabelon", nySkabelon);
        }

        redigerMode = false;
        nySkabelon = new();
        await HentAlle();
    }

    private void RedigerSkabelon(Modeller.DelmaalSkabelon s)
    {
        nySkabelon = new Modeller.DelmaalSkabelon
            {
                Id = s.Id,
                PraktikperiodeNummer = s.PraktikperiodeNummer,
                Beskrivelse = s.Beskrivelse,
                DeadlineOffsetDage = s.DeadlineOffsetDage,
                Ansvarlig = s.Ansvarlig,
                Igangsætter = s.Igangsætter
            };
        redigerMode = true;
    }

    private async Task SletSkabelon(int id)
    {
        await Http.DeleteAsync($"api/delmaalskabelon/{id}");
        await HentAlle();
    }

    private void AnnullerRedigering()
    {
        redigerMode = false;
        nySkabelon = new();
    }
}
