@page "/administrator"
@inject HttpClient Http
@inject NavigationManager NavManager
@inject UserState UserState
@using Modeller
@layout AdminLayout

<div class="container mt-4">
    <h3 class="mb-3">📊 Administratorpanel</h3>

    @if (!UserState.IsLoggedInChecked)
    {
        <p>⏳ Indlæser brugerstatus...</p>
    }
    else if (!UserState.IsLoggedIn)
    {
        <div class="alert alert-warning">🔒 Du skal være logget ind for at se denne side.</div>
    }
    else if (UserState.Role?.ToLower() != "admin")
    {
        <div class="alert alert-danger">🚫 Adgang nægtet – kun administratorer har adgang til denne side.</div>
    }
    else
    {
        <div class="alert alert-success">
            ✅ Velkommen, <strong>@UserState.Username</strong>! Du er logget ind som administrator.
        </div>

        <div class="row mt-4 mb-4">
            <div class="col-md-6">
                <p class="fw-semibold">🔧 Administrative funktioner:</p>
                <div class="d-grid gap-3">
                    <button class="btn btn-modern blue" @onclick='() => NavManager.NavigateTo("/opretuser")'>
                        <i class="bi bi-person-plus-fill"></i> Opret bruger
                    </button>
                    <button class="btn btn-modern green" @onclick='() => NavManager.NavigateTo("/opret-elevplan")'>
                        <i class="bi bi-journal-plus"></i> Opret elevplan
                    </button>
                </div>
            </div>
            <div class="col-md-6">
                <p class="fw-semibold">📈 Brugertællere:</p>
                <div class="d-flex flex-wrap gap-2">
                    <span class="role-tag role-ukendt">👤 Alle: @brugere.Count</span>
                    <span class="role-tag role-elev">🧑‍🎓 Elever: @brugere.Count(x => x.Role?.ToLower() == "elev")</span>
                    <span class="role-tag role-kok">👨‍🍳 Kokke: @brugere.Count(x => x.Role?.ToLower() == "kok")</span>
                    <span class="role-tag role-admin">🛡️ Admins: @brugere.Count(x => x.Role?.ToLower() == "admin")</span>
                    <span class="role-tag role-hr">🧾 HR: @brugere.Count(x => x.Role?.ToLower() == "hr")</span>
                </div>
            </div>
        </div>

        <input class="search-bar" placeholder="🔍 Søg efter brugernavn..." @bind="søgeord" />

        <div class="row">
            @foreach (var b in brugere.Where(b => string.IsNullOrWhiteSpace(søgeord) || b.Username.Contains(søgeord, StringComparison.OrdinalIgnoreCase)))
            {
                <div class="col-md-6 col-lg-4">
                    <div class="user-card mb-3" @onclick="() => VisDetaljer(b)">
                        <div class="card-body">
                            <h5 class="card-title">@b.Navn</h5>
                            <p class="card-text">@b.Username</p>
                            <span class="role-tag @GetRoleClass(b.Role)">🧷 @b.Role</span>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (valgtBruger != null)
        {
            <div class="modal show fade d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">👤 Brugerinfo: @valgtBruger.Username</h5>
                            <button type="button" class="btn-close" @onclick="LukDetaljer"></button>
                        </div>
                        <div class="modal-body">
                            <p><strong>Navn:</strong> @valgtBruger.Navn</p>
                            <p><strong>Email:</strong> @valgtBruger.Email</p>
                            <p><strong>Telefon:</strong> @valgtBruger.Tlf</p>
                            <p><strong>Adresse:</strong> @valgtBruger.Adresse</p>
                            <p><strong>Hotel ID:</strong> @valgtBruger.HotelId</p>
                            <p><strong>Startdato:</strong> @valgtBruger.StartDato.ToShortDateString()</p>
                            <p><strong>Rolle:</strong> <span class="role-tag @GetRoleClass(valgtBruger.Role)">@valgtBruger.Role</span></p>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-secondary" @onclick="LukDetaljer">Luk</button>
                            <button class="btn btn-danger" @onclick="SletBrugerAsync">Slet</button>

                            @if (valgtBruger.Role?.ToLower() == "elev" && valgtBruger.ElevplanId > 0)
                            {
                                <button class="btn btn-info" @onclick="() => SeElevplan(valgtBruger.ElevplanId.Value)">
                                    Se elevplan
                                </button>
                            }

                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private List<Modeller.UserModel> brugere = new();
    private Modeller.UserModel? valgtBruger;
    private string søgeord = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            brugere = await Http.GetFromJsonAsync<List<UserModel>>("api/users/all");
        }
        catch
        {
            brugere = new List<UserModel>();
        }
    }

    void VisDetaljer(UserModel bruger) => valgtBruger = bruger;

    void LukDetaljer() => valgtBruger = null;

    private async Task SletBrugerAsync()
    {
        if (valgtBruger != null)
        {
            var response = await Http.DeleteAsync($"api/users/{valgtBruger.Id}");
            if (response.IsSuccessStatusCode)
            {
                brugere.Remove(valgtBruger);
                valgtBruger = null;
            }
        }
    }

    private void SeElevplan(int elevplanId)
    {
        NavManager.NavigateTo($"/delmaal/{elevplanId}");
    }

    private string GetRoleClass(string role) => role?.ToLower() switch
    {
        "admin" => "role-admin",
        "elev" => "role-elev",
        "kok" => "role-kok",
        "hr" => "role-hr",
        _ => "role-ukendt"
    };
}
