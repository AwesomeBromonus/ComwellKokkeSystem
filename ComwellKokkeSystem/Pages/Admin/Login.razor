@page "/login"
@layout LoginLayout

@inject IAuthService AuthService
@inject NavigationManager NavManager
@inject UserState UserState
@using Modeller

<EditForm Model="@login" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <InputText class="form-control form-control-lg rounded-pill"
                   placeholder="Brugernavn"
                   @bind-Value="login.Username" />
        <ValidationMessage For="@(() => login.Username)" />
    </div>

    <div class="mb-4">
        <InputText type="password"
                   class="form-control form-control-lg rounded-pill"
                   placeholder="Adgangskode"
                   @bind-Value="login.Password" />
        <ValidationMessage For="@(() => login.Password)" />
    </div>

    <button type="submit"
            class="btn btn-login w-100"
            disabled="@isLoading">
        @(isLoading ? "Logger ind..." : "Log ind")
    </button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="login-error">@message</div>
}

<div class="login-info mt-4">
    ❓ Har du problemer med at logge ind?<br />
    Kontakt administrator eller HR-afdelingen.
</div>

@code {
    private LoginModel login = new();
    private string message = "";
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        isLoading = true;
        message = "";

        try
        {
            var success = await AuthService.Login(login);
            if (success)
            {
                var user = await AuthService.GetUserByUsername(login.Username);
                if (user != null)
                {
                    await UserState.SetUserAsync(user.Username, user.Role, user.Id, user.HotelId, user.ElevplanId);

                    if (user.Role?.ToLower() == "admin")
                        NavManager.NavigateTo("/administrator");
                    else if (user.Role?.ToLower() == "elev")
                        NavManager.NavigateTo("/mitoverblik");
                    else
                        NavManager.NavigateTo("/");
                }
                else
                {
                    message = "Kunne ikke hente brugerdata.";
                }
            }
            else
            {
                message = "Forkert brugernavn eller adgangskode.";
            }
        }
        catch (Exception ex)
        {
            message = $"Login-fejl: {ex.Message}";
        }

        isLoading = false;
    }
}
