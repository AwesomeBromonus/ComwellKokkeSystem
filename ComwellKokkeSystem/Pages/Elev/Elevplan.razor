@page "/elevplaner"
@using ComwellKokkeSystem.Service
@using Modeller
@inject IElevplanService ElevplanService
@inject IAuthService AuthService
@inject NavigationManager Nav

<h3 class="text-xl font-bold mb-4">Elevplaner</h3>

@if (elevplaner == null)
{
    <p>Indlæser elevplaner...</p>
}
else
{
    @foreach (var plan in elevplaner)
    {
        <div class="bg-white border shadow-md rounded-xl p-5 mb-6">
            <h4 class="text-lg font-semibold mb-2">Elevplan ID: @plan.Id</h4>
            <p><strong>Elev ID:</strong> @plan.ElevId</p>
            <p><strong>Kommentar:</strong> @plan.Kommentar</p>
            <p><strong>Periode:</strong> @plan.StartDato.ToShortDateString() - @plan.SlutDato.ToShortDateString()</p>

            <button class="btn btn-primary mt-3"
                    @onclick="() => GåTilDelmål(plan.Id)">
                Se delmål
            </button>



        </div>
    }
}

@code {
    // Liste over elevplaner – hentes fra databasen
    private List<Modeller.Elevplan>? elevplaner;

    // Brugerens rolle (fx "admin", "elev")
    private string? rolle;

    // Kører automatisk når komponenten indlæses
    protected override async Task OnInitializedAsync()
    {
        // Hent nuværende brugers rolle (f.eks. "admin" eller "elev")
        rolle = await AuthService.GetCurrentUserRoleAsync();

        // Hent brugerens ID
        var brugerId = await AuthService.GetCurrentUserIdAsync();

        // Hvis bruger er admin: hent alle elevplaner
        if (rolle == "admin")
        {
            elevplaner = await ElevplanService.GetElevplanerAsync();
        }
        // Hvis bruger er elev: hent kun dennes egne elevplaner
        else if (brugerId.HasValue)
        {
            elevplaner = await ElevplanService.GetElevplanerForElevAsync(brugerId.Value);
        }
    }

    // Naviger videre til delmål-siden for en specifik elevplan
    private void GåTilDelmål(int elevplanId)
    {
        Nav.NavigateTo($"/delmaal/{elevplanId}");
    }
}

