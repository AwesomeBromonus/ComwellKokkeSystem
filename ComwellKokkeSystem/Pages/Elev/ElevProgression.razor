@page "/elevprogression/{ElevId:int}"
@using Modeller
@using ComwellKokkeSystem.Service
@inject IDelmaalService DelmålService
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Elevens Progression</h3>

@if (!isAuthorized)
{
    <p>Adgang nægtet. Kun admin, HR eller kok kan se denne side.</p>
}
else if (delmål == null)
{
    <p><em>Loading...</em></p>
}
else if (delmål.Count == 0)
{
    <p>Ingen delmål fundet for denne elev.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Beskrivelse</th>
                <th>Deadline</th>
                <th>Status</th>
                <th>Mangler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dm in delmål)
            {
                <tr>
                    <td>@dm.Beskrivelse</td>
                    <td>@dm.Deadline.ToString("dd/MM/yyyy")</td>
                    <td>@dm.Status</td>
                    <td>@(dm.Status == "Fuldført" ? "Nej" : "Ja")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter] public int ElevId { get; set; }
    private List<Modeller.Delmål> delmål;
    private bool isAuthorized;

    protected override async Task OnInitializedAsync()
    {
        var role = await AuthService.GetCurrentUserRoleAsync();
        Console.WriteLine($"Brugerrolle: {role}");
        isAuthorized = !string.IsNullOrEmpty(role) && 
                       (role.Equals("Admin", StringComparison.OrdinalIgnoreCase) ||
                        role.Equals("HR", StringComparison.OrdinalIgnoreCase) ||
                        role.Equals("kok", StringComparison.OrdinalIgnoreCase));
        if (!isAuthorized)
        {
            NavigationManager.NavigateTo("/access-denied");
            return;
        }

        await LoadDelmål();
    }

    private async Task LoadDelmål()
    {
        try
        {
            delmål = await DelmålService.GetDelmålForElevAsync(ElevId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fejl ved hentning af delmål: {ex.Message}");
            delmål = new List<Modeller.Delmål>();
        }
    }
}