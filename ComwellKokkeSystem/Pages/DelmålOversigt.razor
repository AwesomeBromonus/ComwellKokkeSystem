@page "/elevplan/{id:int}/delmål"
@using Modeller
@inject IElevplanService ElevplanService
@inject IPraktikperiodeService PraktikService

<h3>Delmål for elevplan @id</h3>

@if (elevplan == null)
{
    <p><em>Indlæser elevplan...</em></p>
}
else if (praktikperiode == null)
{
    <p class="text-danger">Ingen praktikperiode fundet.</p>
}
else if (praktikperiode.Delmål == null || !praktikperiode.Delmål.Any())
{
    <p>Der er ingen delmål knyttet til denne praktikperiode.</p>
}
else
{
    <ul class="list-group">
        @foreach (var delmål in praktikperiode.Delmål)
        {
            <li class="list-group-item">
                <strong>@delmål.Beskrivelse</strong> – @delmål.Status<br />
                @if (delmål.Deadline != null)
                {
                    <em>Deadline: @delmål.Deadline.ToShortDateString()</em>
                }
            </li>
        }
    </ul>
}

@code {
    [Parameter]
    public int id { get; set; }

    private Modeller.Elevplan? elevplan;
    private Modeller.Praktikperiode? praktikperiode;

    protected override async Task OnInitializedAsync()
    {
        elevplan = await ElevplanService.GetElevplanByIdAsync(id);

        if (elevplan != null && elevplan.PraktikperiodeId != 0)
        {
            praktikperiode = await PraktikService.GetByIdAsync(elevplan.PraktikperiodeId);
        }
    }
}
