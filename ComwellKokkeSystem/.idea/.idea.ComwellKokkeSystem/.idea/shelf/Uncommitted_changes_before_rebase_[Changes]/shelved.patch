Index: ../ComwellSystemAPI/ComwellSystemAPI.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>net9.0</TargetFramework>\r\n\t\t<Nullable>enable</Nullable>\r\n\t\t<ImplicitUsings>enable</ImplicitUsings>\r\n\t\t<UserSecretsId>575b9cd1-884c-455c-ad48-4e31cf3cf233</UserSecretsId>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t  <Compile Remove=\"Controllers\\ElevplanController-LAPTOP-5IP130V6.cs\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.OpenApi\" Version=\"9.0.2\" />\r\n\t\t<PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"8.1.1\" />\r\n\t\t<PackageReference Include=\"MongoDB.Driver\" Version=\"3.4.0\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<ProjectReference Include=\"..\\Modeller\\Modeller.csproj\" />\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ComwellSystemAPI/ComwellSystemAPI.csproj b/../ComwellSystemAPI/ComwellSystemAPI.csproj
--- a/../ComwellSystemAPI/ComwellSystemAPI.csproj	(revision dd4b3c3a279e146d75e41ec45051e93344598ff2)
+++ b/../ComwellSystemAPI/ComwellSystemAPI.csproj	(date 1747218239442)
@@ -15,9 +15,11 @@
 		<PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="9.0.2" />
 		<PackageReference Include="Swashbuckle.AspNetCore" Version="8.1.1" />
 		<PackageReference Include="MongoDB.Driver" Version="3.4.0" />
+		<PackageReference Include="ClosedXML" Version="0.104.2" />
 	</ItemGroup>
 
 	<ItemGroup>
+		<ProjectReference Include="..\ComwellKokkeSystem\ComwellKokkeSystem.csproj" />
 		<ProjectReference Include="..\Modeller\Modeller.csproj" />
 	</ItemGroup>
 
Index: ../ComwellSystemAPI/Program.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using ComwellSystemAPI.Interfaces;\r\nusing ComwellSystemAPI.Repositories;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\n// Add services to the container.\r\nbuilder.Services.AddControllers();\r\n\r\n// CORS – Allow Blazor frontend\r\nbuilder.Services.AddCors(options =>\r\n{\r\n    options.AddPolicy(\"AllowBlazor\", policy =>\r\n    {\r\n        policy\r\n            .WithOrigins(\"https://localhost:7139\") // Din Blazor frontend-port\r\n            .AllowAnyHeader()\r\n            .AllowAnyMethod();\r\n    });\r\n});\r\n\r\n// Repositories\r\nbuilder.Services.AddSingleton<IElevplan, ElevplanRepository>();\r\nbuilder.Services.AddSingleton<IPraktikperiode, PraktikperiodeRepository>();\r\nbuilder.Services.AddSingleton<IUserRepository, UserRepositoryMongodb>();\r\nbuilder.Services.AddSingleton<IDelmål, DelmålRepository>();\r\nbuilder.Services.AddSingleton<IBesked, BeskedRepositoryMongoDB>();\r\nbuilder.Services.AddSingleton<IKommentar, KommentarRepository>();\r\n\r\n\r\nbuilder.Services.AddOpenApi();\r\n\r\nvar app = builder.Build();\r\n\r\n// Configure the HTTP request pipeline\r\nif (app.Environment.IsDevelopment())\r\n{\r\n    app.MapOpenApi();\r\n}\r\n\r\napp.UseHttpsRedirection();\r\napp.UseCors(\"AllowBlazor\"); // \uD83D\uDEA8 skal være før MapControllers\r\napp.UseAuthorization();\r\n\r\napp.MapControllers();\r\n\r\napp.Run();\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ComwellSystemAPI/Program.cs b/../ComwellSystemAPI/Program.cs
--- a/../ComwellSystemAPI/Program.cs	(revision dd4b3c3a279e146d75e41ec45051e93344598ff2)
+++ b/../ComwellSystemAPI/Program.cs	(date 1747212800968)
@@ -18,16 +18,21 @@
     });
 });
 
-// Repositories
-builder.Services.AddSingleton<IElevplan, ElevplanRepository>();
-builder.Services.AddSingleton<IPraktikperiode, PraktikperiodeRepository>();
-builder.Services.AddSingleton<IUserRepository, UserRepositoryMongodb>();
-builder.Services.AddSingleton<IDelmål, DelmålRepository>();
-builder.Services.AddSingleton<IBesked, BeskedRepositoryMongoDB>();
+
+        builder.Services.AddSingleton<IElevplan, ElevplanRepository>();
+
+        builder.Services.AddSingleton<IPraktikperiode, PraktikperiodeRepository>();
+        builder.Services.AddSingleton<IUserRepository,UserRepositoryMongodb>();
+        builder.Services.AddSingleton<IDelmål, DelmålRepository>();
+        builder.Services.AddSingleton<IBesked, BeskedRepositoryMongoDB>();
+        // Add these lines to your services configuration
+        builder.Services.AddSingleton<IGenereRapport, GenereRapportMongoDB>();
 builder.Services.AddSingleton<IKommentar, KommentarRepository>();
 
 
-builder.Services.AddOpenApi();
+
+        // Learn more about configuring OpenAPI at https://aka.ms/aspnet/openapi
+        builder.Services.AddOpenApi();
 
 var app = builder.Build();
 
Index: Service/Login/AuthService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Modeller;\r\nusing System.Net.Http.Json;\r\n\r\npublic class AuthService : IAuthService\r\n{\r\n    private readonly HttpClient _http;\r\n    private readonly UserState _userState;\r\n\r\n    public AuthService(HttpClient http, UserState userState)\r\n    {\r\n        _http = http;\r\n        _userState = userState;\r\n    }\r\n\r\n    public async Task<bool> Login(LoginModel login)\r\n    {\r\n        var response = await _http.PostAsJsonAsync(\"api/users/login\", login);\r\n\r\n        if (response.IsSuccessStatusCode)\r\n        {\r\n            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();\r\n\r\n            if (result != null)\r\n            {\r\n                // Fallback hvis HotelId eller ElevplanId mangler\r\n                int? hotelId = result.HotelId.HasValue ? result.HotelId : null;\r\n                int? elevplanId = result.ElevplanId.HasValue ? result.ElevplanId : null;\r\n\r\n                await _userState.SetUserAsync(result.Username, result.Role, result.Id, hotelId, elevplanId);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public async Task<UserModel?> GetUserByUsername(string username)\r\n    {\r\n        return await _http.GetFromJsonAsync<UserModel>($\"api/users/{username}\");\r\n    }\r\n\r\n    public async Task<bool> Register(UserModel user)\r\n    {\r\n        var response = await _http.PostAsJsonAsync(\"api/users/register\", user);\r\n        return response.IsSuccessStatusCode;\r\n    }\r\n\r\n    public Task<int?> GetCurrentUserIdAsync() => Task.FromResult(_userState.Id);\r\n    public Task<string?> GetCurrentUserRoleAsync() => Task.FromResult(_userState.Role);\r\n\r\n    public async Task Logout()\r\n    {\r\n        await _userState.LogoutAsync();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Service/Login/AuthService.cs b/Service/Login/AuthService.cs
--- a/Service/Login/AuthService.cs	(revision dd4b3c3a279e146d75e41ec45051e93344598ff2)
+++ b/Service/Login/AuthService.cs	(date 1747213752527)
@@ -41,9 +41,17 @@
 
     public async Task<bool> Register(UserModel user)
     {
-        var response = await _http.PostAsJsonAsync("api/users/register", user);
-        return response.IsSuccessStatusCode;
-    }
+        try
+        {
+            var response = await _http.PostAsJsonAsync("api/users/register", user);
+            return response.IsSuccessStatusCode;
+        }
+        catch {
+            
+            Console.WriteLine($"Fejl ved regisrering: {user.Username}");
+            return false;
+        }
+    } 
 
     public Task<int?> GetCurrentUserIdAsync() => Task.FromResult(_userState.Id);
     public Task<string?> GetCurrentUserRoleAsync() => Task.FromResult(_userState.Role);
Index: wwwroot/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"da\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>ComwellKokkeSystem</title>\r\n    <base href=\"/\" />\r\n\r\n    <!-- Google Font -->\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap\" rel=\"stylesheet\">\r\n\r\n    <!-- Bootstrap 5 -->\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n\r\n\r\n    <link href=\"_content/MudBlazor/MudBlazor.min.css\" rel=\"stylesheet\" />\r\n    <script src=\"_content/MudBlazor/MudBlazor.min.js\"></script>\r\n\r\n\r\n\r\n    <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\r\n\r\n\r\n    <!-- Blazor styles -->\r\n    <link rel=\"stylesheet\" href=\"css/app.css\" />\r\n    <link rel=\"stylesheet\" href=\"ComwellKokkeSystem.styles.css\" />\r\n    <link rel=\"icon\" type=\"image/png\" href=\"favicon.png\" />\r\n\r\n    <style>\r\n        body {\r\n            font-family: 'Inter', sans-serif;\r\n            background-color: #f5f5f5;\r\n        }\r\n    </style>\r\n\r\n\r\n</head>\r\n\r\n<body>\r\n    <div id=\"app\">\r\n        <svg class=\"loading-progress\">\r\n            <circle r=\"40%\" cx=\"50%\" cy=\"50%\" />\r\n            <circle r=\"40%\" cx=\"50%\" cy=\"50%\" />\r\n        </svg>\r\n        <div class=\"loading-progress-text\"></div>\r\n    </div>\r\n\r\n    <div id=\"blazor-error-ui\">\r\n        An unhandled error has occurred.\r\n        <a href=\".\" class=\"reload\">Reload</a>\r\n        <span class=\"dismiss\">\uD83D\uDDD9</span>\r\n    </div>\r\n\r\n    <script src=\"_framework/blazor.webassembly.js\"></script>\r\n</body>\r\n\r\n</html>\r\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css\">\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/wwwroot/index.html b/wwwroot/index.html
--- a/wwwroot/index.html	(revision dd4b3c3a279e146d75e41ec45051e93344598ff2)
+++ b/wwwroot/index.html	(date 1747212800933)
@@ -56,6 +56,31 @@
     </div>
 
     <script src="_framework/blazor.webassembly.js"></script>
+
+    <script>
+        window.BlazorDownloadFile = function (fileName, contentType, content) {
+            // Convert the byte array to a Blob // BLOB ER BINARY LARGE OBJECT
+            // Stores binary data - Blolb will hold multimedia object to add to the 
+            // database ( ikke alle supporter blob storage ) 
+            const blob = new Blob([content], { type: contentType });
+
+            // Create a URL for the Blob
+            const url = URL.createObjectURL(blob);
+
+            // Create a download link
+            const a = document.createElement('a');
+            a.href = url;
+            a.download = fileName;
+
+            // Add to the DOM, click, and remove
+            document.body.appendChild(a);
+            a.click();
+            document.body.removeChild(a);
+
+            // Release the URL object
+            URL.revokeObjectURL(url);
+        }
+    </script>
 </body>
 
 </html>
Index: ComwellKokkeSystem.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk.BlazorWebAssembly\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<TargetFramework>net9.0</TargetFramework>\r\n\t\t<Nullable>enable</Nullable>\r\n\t\t<ImplicitUsings>enable</ImplicitUsings>\r\n\t\t<!-- Fjern evt. forkert WASM ops�tning -->\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t  <Compile Remove=\"Pages\\DelmålOversigt.cs\" />\r\n\t</ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Content Remove=\"Pages\\Counter.razor\" />\r\n    <Content Remove=\"Pages\\DelmplOversigt.razor\" />\r\n    <Content Remove=\"Pages\\DelmålOversigt.razor\" />\r\n    <Content Remove=\"Pages\\Rapportside.razor\" />\r\n    <Content Remove=\"Pages\\Skabelon.razor\" />\r\n    <Content Remove=\"Pages\\Weather.razor\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <None Remove=\"Layout\\NavMenu.razor.css\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Blazored.LocalStorage\" Version=\"4.5.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Components.WebAssembly\" Version=\"9.0.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Components.WebAssembly.DevServer\" Version=\"9.0.2\" PrivateAssets=\"all\" />\r\n    <PackageReference Include=\"Tailwind.MSBuild\" Version=\"1.1.0\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<ProjectReference Include=\"..\\Modeller\\Modeller.csproj\" />\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ComwellKokkeSystem.csproj b/ComwellKokkeSystem.csproj
--- a/ComwellKokkeSystem.csproj	(revision dd4b3c3a279e146d75e41ec45051e93344598ff2)
+++ b/ComwellKokkeSystem.csproj	(date 1747213903633)
@@ -5,6 +5,7 @@
 		<Nullable>enable</Nullable>
 		<ImplicitUsings>enable</ImplicitUsings>
 		<!-- Fjern evt. forkert WASM ops�tning -->
+        <WasmEnableLinking>true</WasmEnableLinking>
 	</PropertyGroup>
 
 	<ItemGroup>
@@ -26,9 +27,13 @@
 
   <ItemGroup>
     <PackageReference Include="Blazored.LocalStorage" Version="4.5.0" />
+    <PackageReference Include="ClosedXML" Version="0.104.2" />
+    <PackageReference Include="ClosedXML_Excel" Version="1.0.0" />
     <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="9.0.2" />
     <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="9.0.2" PrivateAssets="all" />
-    <PackageReference Include="Tailwind.MSBuild" Version="1.1.0">
+      <PackageReference Include="MudBlazor" Version="6.11.0" />
+
+      <PackageReference Include="Tailwind.MSBuild" Version="1.1.0">
       <PrivateAssets>all</PrivateAssets>
       <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
     </PackageReference>
Index: Service/IGenereRapportService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Service/IGenereRapportService.cs b/Service/IGenereRapportService.cs
new file mode 100644
--- /dev/null	(date 1747212801216)
+++ b/Service/IGenereRapportService.cs	(date 1747212801216)
@@ -0,0 +1,15 @@
+using Modeller;
+using System.Collections.Generic;
+using System.Threading.Tasks;
+
+namespace ComwellKokkeSystem.Service
+{
+    public interface IGenereRapportService
+    {
+        Task<List<Praktikperiode>> GetPraktikPerioderAsync(int year);
+        Task<List<Modeller.Delmål>> GetDelmålAsync(int year);
+        Task<List<UserModel>> GetBrugereAsync(int year);
+        Task<byte[]> ExportToCsvAsync(int year);
+        Task<byte[]> ExportToExcelAsync(int year);
+    }
+}
\ No newline at end of file
Index: Service/GenereRapportService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Service/GenereRapportService.cs b/Service/GenereRapportService.cs
new file mode 100644
--- /dev/null	(date 1747212801247)
+++ b/Service/GenereRapportService.cs	(date 1747212801247)
@@ -0,0 +1,49 @@
+using ComwellKokkeSystem.Service;
+using Modeller;
+using System;
+using System.Collections.Generic;
+using System.Net.Http;
+using System.Net.Http.Json;
+using System.Threading.Tasks;
+
+namespace ComwellKokkeSystem.Service
+{
+    public class GenereRapportService : IGenereRapportService
+    {
+        private readonly HttpClient _httpClient;
+
+        public GenereRapportService(HttpClient httpClient)
+        {
+            _httpClient = httpClient;
+        }
+
+        public async Task<List<Praktikperiode>> GetPraktikPerioderAsync(int year)
+        {
+            return await _httpClient.GetFromJsonAsync<List<Praktikperiode>>($"api/rapport/praktikperioder/{year}");
+        }
+
+        public async Task<List<Modeller.Delmål>> GetDelmålAsync(int year)
+        {
+            return await _httpClient.GetFromJsonAsync<List<Modeller.Delmål>>($"api/rapport/delmaal/{year}");
+        }
+
+        public async Task<List<UserModel>> GetBrugereAsync(int year)
+        {
+            return await _httpClient.GetFromJsonAsync<List<UserModel>>($"api/rapport/brugere/{year}");
+        }
+
+        public async Task<byte[]> ExportToCsvAsync(int year)
+        {
+            var response = await _httpClient.GetAsync($"api/rapport/export/csv/{year}");
+            response.EnsureSuccessStatusCode();
+            return await response.Content.ReadAsByteArrayAsync();
+        }
+
+        public async Task<byte[]> ExportToExcelAsync(int year)
+        {
+            var response = await _httpClient.GetAsync($"api/rapport/export/excel/{year}");
+            response.EnsureSuccessStatusCode();
+            return await response.Content.ReadAsByteArrayAsync();
+        }
+    }
+}
\ No newline at end of file
Index: Pages/GenereRapport.razor
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Pages/GenereRapport.razor b/Pages/GenereRapport.razor
new file mode 100644
--- /dev/null	(date 1747213878204)
+++ b/Pages/GenereRapport.razor	(date 1747213878204)
@@ -0,0 +1,180 @@
+@page "/rapportside"
+@using Modeller
+@using ComwellKokkeSystem.Service
+@using System
+@inject IGenereRapportService RapportService
+@inject IAuthService AuthService
+@inject NavigationManager NavigationManager
+@inject IJSRuntime JSRuntime 
+
+<h3>HR Rapport</h3>
+
+@if (!isAdmin)
+{
+    <p>Adgang nægtet. Kun admins kan se denne side.</p>
+}
+else if (praktikperioder == null || delmål == null || brugere == null)
+{
+    <p><em>Loading...</em></p>
+}
+else 
+{
+    <h4>Praktikperioder</h4>
+    <select @onchange="ChangeYear">
+        <option value="2025">2025</option>
+        <option value="2026">2026</option>
+        <option value="2027">2027</option>
+    </select>
+    
+    <div class="mt-4">
+        <button class="btn btn-primary me-2" @onclick="ExportToCsv">Eksporter til CSV</button>
+        <button class="btn btn-success" @onclick="ExportToExcel">Eksporter til Excel</button>
+    </div>
+    
+    <table class="table mt-3">
+        <thead>
+            <tr>
+                <th>Navn</th>
+                <th>Start Dato</th>
+                <th>Slut Dato</th>
+            </tr>
+        </thead>
+        <tbody>
+            @foreach (var periode in praktikperioder)
+            {
+                <tr>
+                    <td>@periode.Navn</td>
+                    <td>@(periode.StartDato.ToString("dd/MM/yyyy") ?? "Ingen dato")</td>
+                    <td>@(periode.SlutDato.ToString("dd/MM/yyyy") ?? "Ingen dato")</td>
+                </tr>
+            }
+        </tbody>
+    </table>
+
+    <h4>Delmål Deadlines</h4>
+    <table class="table">
+        <thead>
+            <tr>
+                <th>Beskrivelse</th>
+                <th>Deadline</th>
+            </tr>
+        </thead>
+        <tbody>
+            @foreach (var dm in delmål)
+            {
+                <tr>
+                    <td>@dm.Beskrivelse</td>
+                    <td>@(dm.Deadline.ToString("dd/MM/yyyy") ?? "Ingen dato")</td>
+                </tr>
+            }
+        </tbody>
+    </table>
+
+    <h4>Nye Brugere</h4>
+    <table class="table">
+        <thead>
+            <tr>
+                <th>Navn</th>
+                <th>Start Dato</th>
+            </tr>
+        </thead>
+        <tbody>
+            @foreach (var bruger in brugere)
+            {
+                <tr>
+                    <td>@bruger.Navn</td>
+                    <td>@(bruger.StartDato.ToString("dd/MM/yyyy") ?? "Ingen dato")</td>
+                </tr>
+            }
+        </tbody>
+    </table>
+}
+
+@code {
+    private List<Praktikperiode>? praktikperioder;
+    private List<Modeller.Delmål>? delmål;
+    private List<UserModel>? brugere;
+    private int selectedYear = 2025;
+    private bool isAdmin = false;
+
+    protected override async Task OnInitializedAsync()
+    {
+        var role = await AuthService.GetCurrentUserRoleAsync();
+        Console.WriteLine($"Brugerrolle: {role}"); // Til debugging
+        if (string.IsNullOrEmpty(role) || !role.Equals("Admin", StringComparison.OrdinalIgnoreCase))
+        {
+            isAdmin = false;
+            NavigationManager.NavigateTo("/access-denied");
+            return;
+        }
+        isAdmin = true;
+
+        await LoadData();
+    }
+
+    private async Task LoadData()
+    {
+        try
+        {
+            praktikperioder = await RapportService.GetPraktikPerioderAsync(selectedYear) ?? new List<Praktikperiode>();
+            delmål = await RapportService.GetDelmålAsync(selectedYear) ?? new List<Modeller.Delmål>();
+            brugere = await RapportService.GetBrugereAsync(selectedYear) ?? new List<UserModel>();
+        }
+        catch (Exception ex)
+        {
+            Console.WriteLine($"Fejl ved hentning af data: {ex.Message}");
+            praktikperioder = new List<Praktikperiode>();
+            delmål = new List<Delmål>();
+            brugere = new List<UserModel>();
+        }
+    }
+
+    private async Task ChangeYear(ChangeEventArgs e)
+    {
+        if (e.Value != null)
+        {
+            selectedYear = int.Parse(e.Value.ToString());
+            await LoadData();
+        }
+    }
+
+    private async Task ExportToCsv()
+    {
+        try
+        {
+            var fileContent = await RapportService.ExportToCsvAsync(selectedYear);
+            if (fileContent.Length > 0)
+            {
+                await DownloadFile("rapport.csv", "text/csv", fileContent);
+            }
+        }
+        catch (Exception ex)
+        {
+            Console.WriteLine($"Fejl ved eksport til CSV: {ex.Message}");
+            // Vis fejlbesked til brugeren
+        }
+    }
+
+    private async Task ExportToExcel()
+    {
+        try
+        {
+            var fileContent = await RapportService.ExportToExcelAsync(selectedYear);
+            if (fileContent.Length > 0)
+            {
+                await DownloadFile("rapport.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", fileContent);
+            }
+        }
+        catch (Exception ex)
+        {
+            Console.WriteLine($"Fejl ved eksport til Excel: {ex.Message}");
+            // Vis fejlbesked til brugeren
+        }
+    }
+
+    private async Task DownloadFile(string fileName, string contentType, byte[] content)
+    {
+        // Vi bruger en JavaScript-funktion som allerede findes i Blazor WASM
+        await JSRuntime.InvokeVoidAsync("BlazorDownloadFile", fileName, contentType, content);
+    }
+}
\ No newline at end of file
Index: Layout/NavMenu.razor
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@inject NavigationManager NavManager\r\n@inject UserState UserState\r\n@implements IDisposable\r\n\r\n@if (UserState.IsLoggedIn)\r\n{\r\n    <div class=\"sidebar vh-100 shadow-sm d-flex flex-column justify-content-between\"\r\n         style=\"width: 250px; background: linear-gradient(180deg, #003b4a 0%, #002f3a 100%);\">\r\n\r\n        <!-- Logo / Top -->\r\n        <div>\r\n            <div class=\"px-4 py-3 border-bottom border-light\">\r\n                <h5 class=\"m-0 text-white fw-semibold\">Comwell</h5>\r\n            </div>\r\n\r\n            <!-- Navigation -->\r\n            <nav class=\"nav flex-column mt-3 px-3\">\r\n                <ul class=\"nav flex-column gap-2\">\r\n                    <li class=\"nav-item\">\r\n                        @if (UserState.Role?.ToLower() == \"admin\")\r\n                        {\r\n                            <NavLink class=\"nav-link text-white\" href=\"/administrator\">\r\n                                \uD83C\uDFE0 Hjem\r\n                            </NavLink>\r\n                        }\r\n                        else if (UserState.Role?.ToLower() == \"elev\")\r\n                        {\r\n                            <NavLink class=\"nav-link text-white\" href=\"/mitoverblik\">\r\n                                \uD83D\uDDC2\uFE0F Elevplan\r\n                            </NavLink>\r\n                        }\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        <NavLink class=\"nav-link text-white\" href=\"/messages\">\r\n                            \uD83D\uDCAC Chat\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        <NavLink class=\"nav-link text-white\" href=\"/laering\">\r\n                            \uD83D\uDCDA Læring\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                   \r\n\r\n                    @if (UserState.Role?.ToLower() == \"admin\")\r\n                    {\r\n                        <li class=\"nav-item\">\r\n                            <NavLink class=\"nav-link text-white\" href=\"/a\">\r\n                                \uD83D\uDCCA Rapport\r\n                            </NavLink>\r\n                        </li>\r\n                    }\r\n                </ul>\r\n\r\n            </nav>\r\n        </div>\r\n\r\n        <!-- Footer -->\r\n        <div class=\"px-3 pb-3\">\r\n            <hr class=\"text-white my-3\" />\r\n            <div class=\"text-white small mb-2\">\r\n                Logget ind som <strong>@UserState.Username</strong> (@UserState.Role)\r\n            </div>\r\n            <button class=\"btn btn-sm btn-outline-light w-100\" @onclick=\"LogoutAsync\">Log ud</button>\r\n        </div>\r\n    </div>\r\n}\r\nelse\r\n{\r\n    <div class=\"sidebar vh-100 d-flex flex-column justify-content-center align-items-center text-white\"\r\n         style=\"width: 250px; background: linear-gradient(180deg, #003b4a 0%, #002f3a 100%);\">\r\n        <NavLink class=\"btn btn-light\" href=\"/login\">\r\n            \uD83D\uDD10 Log ind\r\n        </NavLink>\r\n    </div>\r\n}\r\n\r\n@code {\r\n    protected override void OnInitialized()\r\n    {\r\n        UserState.OnChange += StateHasChanged;\r\n    }\r\n\r\n    public void Dispose()\r\n    {\r\n        UserState.OnChange -= StateHasChanged;\r\n    }\r\n\r\n    private async Task LogoutAsync()\r\n    {\r\n        await UserState.LogoutAsync();\r\n        NavManager.NavigateTo(\"/\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Layout/NavMenu.razor b/Layout/NavMenu.razor
--- a/Layout/NavMenu.razor	(revision dd4b3c3a279e146d75e41ec45051e93344598ff2)
+++ b/Layout/NavMenu.razor	(date 1747212801028)
@@ -48,7 +48,7 @@
                     @if (UserState.Role?.ToLower() == "admin")
                     {
                         <li class="nav-item">
-                            <NavLink class="nav-link text-white" href="/a">
+                            <NavLink class="nav-link text-white" href="/rapportside">
                                 📊 Rapport
                             </NavLink>
                         </li>
Index: Program.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Microsoft.AspNetCore.Components.Web;\r\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\r\nusing ComwellKokkeSystem;\r\nusing Blazored.LocalStorage;\r\nusing Service;\r\nusing ComwellKokkeSystem.Service;\r\n\r\n\r\npublic class Program\r\n{\r\n    public static async Task Main(string[] args)\r\n    {\r\n        var builder = WebAssemblyHostBuilder.CreateDefault(args);\r\n\r\n        builder.RootComponents.Add<App>(\"#app\");\r\n        builder.RootComponents.Add<HeadOutlet>(\"head::after\");\r\n\r\n        builder.Services.AddScoped<UserState>();\r\n\r\n\r\n        builder.Services.AddScoped(sp => new HttpClient\r\n        {\r\n            BaseAddress = new Uri(\"https://localhost:7013/\")\r\n        });\r\n\r\n        builder.Services.AddBlazoredLocalStorage();\r\n\r\n        // Applikationsservices\r\n        builder.Services.AddScoped<IElevplanService, ElevplanService>();\r\n        builder.Services.AddScoped<IPraktikperiodeService, PraktikperiodeService>();\r\n        builder.Services.AddScoped<IAuthService, AuthService>();\r\n        builder.Services.AddScoped<IDelmaalService, DelmaalService>();\r\n        builder.Services.AddScoped<IBeskedService, BeskedService>();\r\n        builder.Services.AddScoped<IKommentarService, KommentarService>();\r\n\r\n\r\n\r\n\r\n\r\n        await builder.Build().RunAsync();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Program.cs b/Program.cs
--- a/Program.cs	(revision dd4b3c3a279e146d75e41ec45051e93344598ff2)
+++ b/Program.cs	(date 1747212801052)
@@ -32,7 +32,8 @@
         builder.Services.AddScoped<IDelmaalService, DelmaalService>();
         builder.Services.AddScoped<IBeskedService, BeskedService>();
         builder.Services.AddScoped<IKommentarService, KommentarService>();
-
+        // Register the service
+        builder.Services.AddScoped<IGenereRapportService, GenereRapportService>();
 
 
 
Index: ../ComwellSystemAPI/Interfaces/IGenereRapportService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ComwellSystemAPI/Interfaces/IGenereRapportService.cs b/../ComwellSystemAPI/Interfaces/IGenereRapportService.cs
new file mode 100644
--- /dev/null	(date 1747212801076)
+++ b/../ComwellSystemAPI/Interfaces/IGenereRapportService.cs	(date 1747212801076)
@@ -0,0 +1,6 @@
+namespace ComwellSystemAPI.Interfaces;
+
+public class IGenereRapportService
+{
+    
+}
\ No newline at end of file
Index: ../ComwellSystemAPI/Interfaces/IGenereRapport.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ComwellSystemAPI/Interfaces/IGenereRapport.cs b/../ComwellSystemAPI/Interfaces/IGenereRapport.cs
new file mode 100644
--- /dev/null	(date 1747212801093)
+++ b/../ComwellSystemAPI/Interfaces/IGenereRapport.cs	(date 1747212801093)
@@ -0,0 +1,20 @@
+using Modeller;
+using System.Collections.Generic;
+using System.Threading.Tasks;
+
+namespace ComwellSystemAPI.Interfaces
+{
+    public interface IGenereRapport
+    {
+        Task<List<Praktikperiode>> GetPraktikPerioderAsync(int year);
+        Task<List<Delmål>> GetDelmålAsync(int year);
+        Task<List<Delmål>> GetDelmålMånedAsync(int year, int month);
+        Task<List<UserModel>> GetBrugereAsync(int year);
+        Task<List<Delmål>> GetFuldførteDelmålAsync(int year); // Nyttig for statusrapporter
+        Task<List<Praktikperiode>> GetPraktikPerioderPerElevAsync(int elevId, int year); // Rapporter per elev
+        Task<int> GetTotalTimerAsync(int year); // Hvis timer bliver implementeret senere
+        
+        Task<Byte[]> ExportToCsvAsync(int year);
+        Task<Byte[]> ExportToExcelAsync(int year);
+    }
+}
\ No newline at end of file
Index: ../ComwellSystemAPI/Repositories/GenereRapportMongoDB.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ComwellSystemAPI/Repositories/GenereRapportMongoDB.cs b/../ComwellSystemAPI/Repositories/GenereRapportMongoDB.cs
new file mode 100644
--- /dev/null	(date 1747212801107)
+++ b/../ComwellSystemAPI/Repositories/GenereRapportMongoDB.cs	(date 1747212801107)
@@ -0,0 +1,195 @@
+using ComwellSystemAPI.Interfaces;
+using Modeller;
+using MongoDB.Driver;
+using System.Collections.Generic;
+using System.Threading.Tasks;
+using System;
+using System.IO;
+using System.Text;
+using System.Globalization;
+using System.Linq;
+using ClosedXML.Excel; // You'll need to add this NuGet package
+
+namespace ComwellSystemAPI.Repositories
+{
+    public class GenereRapportMongoDB : IGenereRapport
+    {
+        // MongoDB-kollektioner
+        private readonly IMongoCollection<Praktikperiode> _praktikperioder;
+        private readonly IMongoCollection<Delmål> _delmål;
+        private readonly IMongoCollection<UserModel> _brugere;
+
+        public GenereRapportMongoDB()
+        {
+            var mongoUri = "mongodb+srv://Brobolo:Bromus12344321@cluster0.k4kon.mongodb.net/";
+            var client = new MongoClient(mongoUri);
+            var database = client.GetDatabase("Comwell");
+            _praktikperioder = database.GetCollection<Praktikperiode>("Praktikperioder");
+            _delmål = database.GetCollection<Delmål>("Delmål");
+            _brugere = database.GetCollection<UserModel>("Brugere");
+        }
+
+        public async Task<List<Praktikperiode>> GetPraktikPerioderAsync(int year)
+        {
+            return await _praktikperioder.Find(p => p.StartDato.Year == year)
+                .ToListAsync();
+        }
+
+        public async Task<List<Delmål>> GetDelmålAsync(int year)
+        {
+            return await _delmål.Find(d => d.Deadline.Year == year)
+                .ToListAsync();
+        }
+
+        public async Task<List<Delmål>> GetDelmålMånedAsync(int year, int month)
+        {
+            return await _delmål.Find(d => d.Deadline.Year == year && d.Deadline.Month == month)
+                .ToListAsync();
+        }
+
+        public async Task<List<UserModel>> GetBrugereAsync(int year)
+        {
+            return await _brugere.Find(b => b.StartDato.Year == year)
+                .ToListAsync();
+        }
+
+        public async Task<List<Delmål>> GetFuldførteDelmålAsync(int year)
+        {
+            return await _delmål.Find(d => d.Deadline.Year == year && d.Status == "Fuldført")
+                .ToListAsync();
+        }
+
+        public async Task<List<Praktikperiode>> GetPraktikPerioderPerElevAsync(int elevId, int year)
+        {
+            return await _praktikperioder.Find(p => p.ElevId == elevId && p.StartDato.Year == year)
+                .ToListAsync();
+        }
+
+        public async Task<int> GetTotalTimerAsync(int year)
+        {
+            // Placeholder - skal implementeres, hvis timer registreres
+            return 0;
+        }
+
+        public async Task<byte[]> ExportToCsvAsync(int year)
+        {
+            // Hent alle data
+            var praktikperioder = await GetPraktikPerioderAsync(year);
+            var delmål = await GetDelmålAsync(year);
+            var brugere = await GetBrugereAsync(year);
+
+            using var memoryStream = new MemoryStream();
+            using var writer = new StreamWriter(memoryStream, Encoding.UTF8);
+            
+            // Praktikperioder
+            writer.WriteLine("PRAKTIKPERIODER");
+            writer.WriteLine("Navn,StartDato,SlutDato");
+            foreach (var periode in praktikperioder)
+            {
+                writer.WriteLine($"{periode.Navn},{periode.StartDato:dd/MM/yyyy},{periode.SlutDato:dd/MM/yyyy}");
+            }
+            
+            writer.WriteLine(); // Tom linje mellem sektioner
+            
+            // Delmål
+            writer.WriteLine("DELMÅL");
+            writer.WriteLine("Beskrivelse,Deadline,Status");
+            foreach (var dm in delmål)
+            {
+                writer.WriteLine($"{dm.Beskrivelse},{dm.Deadline:dd/MM/yyyy},{dm.Status}");
+            }
+            
+            writer.WriteLine(); // Tom linje mellem sektioner
+            
+            // Brugere
+            writer.WriteLine("NYE BRUGERE");
+            writer.WriteLine("Navn,StartDato");
+            foreach (var bruger in brugere)
+            {
+                writer.WriteLine($"{bruger.Navn},{bruger.StartDato:dd/MM/yyyy}");
+            }
+            
+            writer.Flush();
+            return memoryStream.ToArray();
+        }
+
+        public async Task<byte[]> ExportToExcelAsync(int year)
+        {
+            // Hent alle data
+            var praktikperioder = await GetPraktikPerioderAsync(year);
+            var delmål = await GetDelmålAsync(year);
+            var brugere = await GetBrugereAsync(year);
+
+            using var workbook = new XLWorkbook();
+            
+            // Praktikperioder worksheet
+            var worksheetPerioder = workbook.Worksheets.Add("Praktikperioder");
+            worksheetPerioder.Cell(1, 1).Value = "Navn";
+            worksheetPerioder.Cell(1, 2).Value = "Start Dato";
+            worksheetPerioder.Cell(1, 3).Value = "Slut Dato";
+            
+            int row = 2;
+            foreach (var periode in praktikperioder)
+            {
+                worksheetPerioder.Cell(row, 1).Value = periode.Navn;
+                worksheetPerioder.Cell(row, 2).Value = periode.StartDato.ToString("dd/MM/yyyy") ?? "Ingen dato";
+                worksheetPerioder.Cell(row, 3).Value = periode.SlutDato.ToString("dd/MM/yyyy") ?? "Ingen dato";
+                row++;
+            }
+            
+            // Style header
+            var headerRange = worksheetPerioder.Range(1, 1, 1, 3);
+            headerRange.Style.Font.Bold = true;
+            headerRange.Style.Fill.BackgroundColor = XLColor.LightGray;
+            
+            worksheetPerioder.Columns().AdjustToContents();
+            
+            // Delmål worksheet
+            var worksheetDelmål = workbook.Worksheets.Add("Delmål");
+            worksheetDelmål.Cell(1, 1).Value = "Beskrivelse";
+            worksheetDelmål.Cell(1, 2).Value = "Deadline";
+            worksheetDelmål.Cell(1, 3).Value = "Status";
+            
+            row = 2;
+            foreach (var dm in delmål)
+            {
+                worksheetDelmål.Cell(row, 1).Value = dm.Beskrivelse;
+                worksheetDelmål.Cell(row, 2).Value = dm.Deadline.ToString("dd/MM/yyyy") ?? "Ingen dato";
+                worksheetDelmål.Cell(row, 3).Value = dm.Status;
+                row++;
+            }
+            
+            // Style header
+            headerRange = worksheetDelmål.Range(1, 1, 1, 3);
+            headerRange.Style.Font.Bold = true;
+            headerRange.Style.Fill.BackgroundColor = XLColor.LightGray;
+            
+            worksheetDelmål.Columns().AdjustToContents();
+            
+            // Brugere worksheet
+            var worksheetBrugere = workbook.Worksheets.Add("Nye Brugere");
+            worksheetBrugere.Cell(1, 1).Value = "Navn";
+            worksheetBrugere.Cell(1, 2).Value = "Start Dato";
+            
+            row = 2;
+            foreach (var bruger in brugere)
+            {
+                worksheetBrugere.Cell(row, 1).Value = bruger.Navn;
+                worksheetBrugere.Cell(row, 2).Value = bruger.StartDato.ToString("dd/MM/yyyy") ?? "Ingen dato";
+                row++;
+            }
+            
+            // Style header
+            headerRange = worksheetBrugere.Range(1, 1, 1, 2);
+            headerRange.Style.Font.Bold = true;
+            headerRange.Style.Fill.BackgroundColor = XLColor.LightGray;
+            
+            worksheetBrugere.Columns().AdjustToContents();
+            
+            // Save to memory stream
+            using var memoryStream = new MemoryStream();
+            workbook.SaveAs(memoryStream);
+            return memoryStream.ToArray();
+        }
+    }
+}
\ No newline at end of file
Index: ../ComwellSystemAPI/Controllers/RapportController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ComwellSystemAPI/Controllers/RapportController.cs b/../ComwellSystemAPI/Controllers/RapportController.cs
new file mode 100644
--- /dev/null	(date 1747212801147)
+++ b/../ComwellSystemAPI/Controllers/RapportController.cs	(date 1747212801147)
@@ -0,0 +1,68 @@
+using ComwellSystemAPI.Interfaces;
+using Microsoft.AspNetCore.Mvc;
+using System.Threading.Tasks;
+using System;
+
+namespace ComwellSystemAPI.Controllers
+{
+    [ApiController]
+    [Route("api/[controller]")]
+    public class RapportController : ControllerBase
+    {
+        private readonly IGenereRapport _rapportService;
+
+        public RapportController(IGenereRapport rapportService)
+        {
+            _rapportService = rapportService;
+        }
+
+        [HttpGet("praktikperioder/{year}")]
+        public async Task<IActionResult> GetPraktikperioder(int year)
+        {
+            var perioder = await _rapportService.GetPraktikPerioderAsync(year);
+            return Ok(perioder);
+        }
+
+        [HttpGet("delmaal/{year}")]
+        public async Task<IActionResult> GetDelmaal(int year)
+        {
+            var delmaal = await _rapportService.GetDelmålAsync(year);
+            return Ok(delmaal);
+        }
+
+        [HttpGet("brugere/{year}")]
+        public async Task<IActionResult> GetBrugere(int year)
+        {
+            var brugere = await _rapportService.GetBrugereAsync(year);
+            return Ok(brugere);
+        }
+
+        [HttpGet("export/csv/{year}")]
+        public async Task<IActionResult> ExportToCsv(int year)
+        {
+            try
+            {
+                var fileContent = await _rapportService.ExportToCsvAsync(year);
+                return File(fileContent, "text/csv", $"rapport_{year}.csv");
+            }
+            catch (Exception ex)
+            {
+                return StatusCode(500, $"Fejl ved eksport til CSV: {ex.Message}");
+            }
+        }
+
+        [HttpGet("export/excel/{year}")]
+        public async Task<IActionResult> ExportToExcel(int year)
+        {
+            try
+            {
+                var fileContent = await _rapportService.ExportToExcelAsync(year);
+                return File(fileContent, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", $"rapport_{year}.xlsx");
+            }
+            catch (Exception ex)
+            {
+                return StatusCode(500, $"Fejl ved eksport til Excel: {ex.Message}");
+            }
+        }
+    }
+}
\ No newline at end of file
